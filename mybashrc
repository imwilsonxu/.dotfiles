#!/bin/bash

export CLICOLOR=1

# Colors
LIGHT_CYAN="\[\033[1;36m\]"
GREEN="\[\033[0;32m\]"
RED="\[\033[0;31m\]"
NO_COLOR="\[\e[0m\]"

export EDITOR='vim'

# Commands history
# http://www.thegeekstuff.com/2008/08/15-examples-to-master-linux-command-line-history/
# Larger bash history (allow 32Â³ entries; default is 500)
export HISTSIZE=32768
# Eliminate the repeated commands.
export HiSTFILESIZE=$HISTSIZE
export HISTCONTROL=ignoredups
# Make some commands not show up in history
export HISTIGNORE="ls:ls *"

# Enable vi editing mode
set -o vi

source ~/.dotfiles/aliases

#############
# Functions
#############

extract() {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)  tar xjf $1      ;;
            *.tar.gz)   tar xzf $1      ;;
            *.bz2)      bunzip2 $1      ;;
            *.rar)      rar x $1        ;;
            *.gz)       gunzip $1       ;;
            *.tar)      tar xf $1       ;;
            *.tbz2)     tar xjf $1      ;;
            *.tgz)      tar xzf $1      ;;
            *.zip)      unzip $1        ;;
            *.Z)        uncompress $1   ;;
            *)          echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

psgrep() {
    if [ ! -z $1 ] ; then
        echo "Grepping for processes matching $1..."
        ps aux | grep $1 | grep -v grep
    else
        echo "!! Need name to grep for"
    fi
}

grab() {
    sudo chown -R ${USER} ${1:-.}
}

#netinfo - shows network information for your system
netinfo() {
    echo "--------------- Network Information ---------------"
    /sbin/ifconfig | awk /'inet addr/ {print $2}'
    /sbin/ifconfig | awk /'Bcast/ {print $3}'
    /sbin/ifconfig | awk /'inet addr/ {print $4}'
    /sbin/ifconfig | awk /'HWaddr/ {print $4,$5}'
    myip=`lynx -dump -hiddenlinks=ignore -nolist http://checkip.dyndns.org:8245/ | sed '/^$/d; s/^[ ]*//g; s/[ ]*$//g' `
    echo "${myip}"
    echo "---------------------------------------------------"
}

dirsize() {
    du -shx * .[a-zA-Z0-9_]* 2> /dev/null | \
    egrep '^ *[0-9.]*[MG]' | sort -n > /tmp/list
    egrep '^ *[0-9.]*M' /tmp/list
    egrep '^ *[0-9.]*G' /tmp/list
    rm -rf /tmp/list
}

# Show current git branch in command prompt.
parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

function rp() {
    if [[ $# == 3 ]]; then
        pattern=$1
        replacement=$2
        filename=$3
        echo "$pattern -> $replacement in $filename"
        mv "$filename" "$filename.old"
        sed "s/$pattern/$replacement/g" < "$filename.old" > "$filename"
    fi
}

# \u: user
# \h: host
# \w: abspath
# export PS1="[\u@\h ${LIGHT_CYAN}\w${GREEN}\$(parse_git_branch)${NO_COLOR}]^o^ "
